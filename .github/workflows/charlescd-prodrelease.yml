name: charlescd-prodrelease

on:
  release:
    types:
      - created
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Update charts
      run: |
        mv ./install/helm-chart/Chart.yaml ./install/helm-chart/Chart.old.yaml &&
        cat ./install/helm-chart/Chart.old.yaml | grep -v appVersion > ./install/helm-chart/Chart.yaml &&
        echo -e "\r\nappVersion: ${{ steps.get_version.outputs.VERSION }}\r\n" >> ./install/helm-chart/Chart.yaml &&
        cat ./install/helm-chart/Chart.yaml &&
        sed -i -E "s/(zupcharles\/.*:)(.*)/\1${{ steps.get_version.outputs.VERSION }}/" ./install/helm-chart/values.yaml

    - name: Generate single file
      uses: WyriHaximus/github-action-helm3@v1.0.0
      with:
        exec: helm template charlescd -n charles ./install/helm-chart > ./install/helm-chart/single-file.yaml

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v2

    - name: Zup Settings
      run: |
        sed -i -E "s/(charles\.info\.example)/${{ secrets.HOST }}/" ./install/helm-chart/values.yaml &&
        sed -i -E "s/(charlescd-postgresql)/${{ secrets.PG_HOST }}/" ./install/helm-chart/values.yaml &&
        sed -i -E "s/(charlescd-postgresql)/${{ secrets.PG_HOST }}/" ./install/helm-chart/charts/keycloak/values.yaml &&
        sed -i -E "/postgresql:/N;s/(postgresql:.*enabled: )(true)/\1false/" ./install/helm-chart/values.yaml
    - name: Deploy
      uses: WyriHaximus/github-action-helm3@v1.0.0
      with:
        exec: helm upgrade charlescd ./install/helm-chart/ --install --wait --atomic --namespace=charles --values=./install/helm-chart/values.yaml
        kubeconfig: '${{ secrets.KUBECONFIG }}'
